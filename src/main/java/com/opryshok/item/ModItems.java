package com.opryshok.item;

import com.opryshok.BorukvaFood;
import com.opryshok.block.ModBlocks;
import com.opryshok.utils.ModConsumableComponents;
import com.opryshok.utils.ModFoodComponents;
import eu.pb4.polymer.core.api.item.PolymerBlockItem;
import eu.pb4.polymer.core.api.item.PolymerItemGroupUtils;
import eu.pb4.polymer.core.api.item.SimplePolymerItem;
import net.fabricmc.loader.api.FabricLoader;
import net.minecraft.component.type.FoodComponents;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.registry.RegistryKey;
import net.minecraft.registry.RegistryKeys;
import net.minecraft.text.Text;
import net.minecraft.util.Identifier;

import java.util.function.Function;

public class ModItems {
    public static Item FERTILIZER = registerItem("fertilizer", settings -> new FertilizerItem(settings));
    public static Item SOIL_ANALIZATOR = registerItem("soil_analizator", settings -> new SoilAnalizatorItem(settings), new Item.Settings().maxCount(1));
    public static Item KNIFE = registerItem("knife", KnifeTool::new);
    public static Item HARVEST_SICKLE = registerItem("harvest_sickle", HarvestSickleItem::new);
    public static Item COMPOST = registerItem("compost", CompostItem::new);
    public static Item RICE = registerItem("rice", settings -> new PolymerBlockItem(ModBlocks.RICE, settings));
    public static Item RICE_PANICLE = registerItem("rice_panicle", SimplePolymerItem::new);
    public static Item RICE_BOWL = registerItem("rice_bowl", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.RICE_BOWL).useRemainder(Items.BOWL));
    public static Item SALMON_FILLET = registerItem("salmon_fillet", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALMON_FILLET));
    public static Item SALMON_MAKI = registerItem("salmon_maki", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALMON_MAKI, ModConsumableComponents.SALMON_MAKI));
    public static Item SALMON_NIGIRI = registerItem("salmon_nigiri", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALMON_NIGIRI, ModConsumableComponents.SALMON_NIGIRI));
    public static Item SALMON_URAMAKI = registerItem("salmon_uramaki", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALMON_URAMAKI, ModConsumableComponents.SALMON_URAMAKI));
    public static Item ONIGIRI = registerItem("onigiri", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ONIGIRI));
    public static Item NORI = registerItem("nori", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.NORI, ModConsumableComponents.NORI));
    public static Item SAUERKRAUT = registerItem("sauerkraut", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SAUERKRAUT).useRemainder(Items.BOWL));
    public static Item SALO = registerItem("salo", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALO, ModConsumableComponents.SALO));
    public static Item SUNFLOWER_SEED = registerItem("sunflower_seed", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SUNFLOWER_SEED, ModConsumableComponents.SUNFLOWER_SEED));
    public static Item ROASTED_SUNFLOWER_SEED = registerItem("roasted_sunflower_seed", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ROASTED_SUNFLOWER_SEED, ModConsumableComponents.ROASTED_SUNFLOWER_SEED));

    public static Item TOMATO_SEEDS = registerItem("tomato_seeds", settings -> new PolymerBlockItem(ModBlocks.TOMATO, settings));
    public static Item CABBAGE_SEEDS = registerItem("cabbage_seeds", settings -> new PolymerBlockItem(ModBlocks.CABBAGE, settings));
    public static Item CORN_SEEDS = registerItem("corn_seeds", settings -> new PolymerBlockItem(ModBlocks.CORN, settings));
    public static Item CHILLI_PEPPER_SEEDS = registerItem("chilli_pepper_seeds", settings -> new PolymerBlockItem(ModBlocks.CHILLI_PEPPER, settings));
    public static Item CUCUMBER_SEEDS = registerItem("cucumber_seeds", settings -> new PolymerBlockItem(ModBlocks.CUCUMBER, settings));
    public static Item LETTUCE_SEEDS = registerItem("lettuce_seeds", settings -> new PolymerBlockItem(ModBlocks.LETTUCE, settings));
    public static Item ONION_SEEDS = registerItem("onion_seeds", settings -> new PolymerBlockItem(ModBlocks.ONION, settings));
    public static Item ENDER_INFECTED_ONION_SEEDS = registerItem("ender_infected_onion_seeds", settings -> new PolymerBlockItem(ModBlocks.ENDER_INFECTED_ONION, settings));
    public static Item TOMATO = registerItem("tomato", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.TOMATO));
    public static Item CABBAGE = registerItem("cabbage", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CABBAGE));
    public static Item CHILLI_PEPPER = registerItem("chilli_pepper", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHILLI_PEPPER, ModConsumableComponents.CHILLI_PEPPER));
    public static Item CORN = registerItem("corn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CORN));
    public static Item CUCUMBER = registerItem("cucumber", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CUCUMBER));
    public static Item LETTUCE = registerItem("lettuce", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.LETTUCE));
    public static Item LEMON = registerItem("lemon", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.LEMON));
    public static Item BLACKCURRANTS = registerItem("blackcurrants", settings -> new PolymerBlockItem(ModBlocks.BLACKCURRANTS_BUSH, settings), new Item.Settings().food(FoodComponents.SWEET_BERRIES));
    public static Item GOOSEBERRY = registerItem("gooseberry", settings -> new PolymerBlockItem(ModBlocks.GOOSEBERRY_BUSH, settings), new Item.Settings().food(FoodComponents.SWEET_BERRIES));
    public static Item ONION = registerItem("onion", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ONION, ModConsumableComponents.ONION));
    public static Item GRAPE_SAPLING = registerItem("grape_sapling", settings -> new PolymerBlockItem(ModBlocks.GRAPE, settings));
    public static Item ENDER_INFECTED_ONION = registerItem("ender_infected_onion", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ENDER_INFECTED_ONION));
    public static Item SALT = registerItem("salt", SimplePolymerItem::new);
    public static Item WAFFLE = registerItem("waffle", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.WAFFLE));
    public static Item CHOCOLATE_BAR = registerItem("chocolate_bar", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHOCOLATE_BAR));
    public static Item OIL = registerItem("oil", SimplePolymerItem::new);
    public static Item GUACAMOLE = registerItem("guacamole", SimplePolymerItem::new);
    public static Item HOT_SPICE = registerItem("hot_spice", SimplePolymerItem::new);
    public static Item KETCHUP = registerItem("ketchup", SimplePolymerItem::new);
    public static Item MAYONNAISE = registerItem("mayonnaise", SimplePolymerItem::new);
    public static Item MEAT_PIZZA_SLICE = registerItem("meat_pizza_slice", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.MEAT_PIZZA));
    public static Item VEGAN_PIZZA_SLICE = registerItem("vegan_pizza_slice", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.PIZZA));
    public static Item CHOCOLATE_ICE_CREAM = registerItem("chocolate_ice_cream", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHOCOLATE_ICE_CREAM, ModConsumableComponents.CHOCOLATE_ICE_CREAM));
    public static Item ICE_CREAM = registerItem("ice_cream", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ICE_CREAM, ModConsumableComponents.ICE_CREAM));
    public static Item SWEET_BERRY_COOKIE = registerItem("sweet_berry_cookie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKIE));
    public static Item BLACKCURRANT_COOKIE = registerItem("blackcurrant_cookie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKIE));
    public static Item BEEF_SANDWICH = registerItem("beef_sandwich", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BEEF_SANDWICH));
    public static Item TOMATO_SANDWICH = registerItem("tomato_sandwich", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.TOMATO_SANDWICH));
    public static Item BREAD_SLICE = registerItem("bread_slice", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BREAD_SLICE));
    public static Item BORSCH = registerItem("borsch", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BORSCH, ModConsumableComponents.BORSCH).maxCount(1).useRemainder(Items.BOWL));
    public static Item BROTH = registerItem("broth", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BROTH).maxCount(1).useRemainder(Items.BOWL));
    public static Item ROTTEN_SOUP = registerItem("rotten_soup", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ROTTEN_SOUP, ModConsumableComponents.ROTTEN_SOUP).maxCount(1).useRemainder(Items.BOWL));
    public static Item BEEF_SLICES = registerItem("beef_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BEEF_SLICES));
    public static Item VEGAN_BARBECUE = registerItem("vegan_barbecue", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.VEGAN_BARBECUE));
    public static Item COOKED_VEGAN_BARBECUE = registerItem("cooked_vegan_barbecue", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_VEGAN_BARBECUE));
    public static Item BEEF_BARBECUE = registerItem("beef_barbecue", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BEEF_BARBECUE));
    public static Item COOKED_BEEF_BARBECUE = registerItem("cooked_beef_barbecue", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_BEEF_BARBECUE));
    public static Item PICKLE_JAR = registerItem("pickle_jar", settings -> new PickleJarItem(settings), new Item.Settings().maxCount(16));
    public static Item LEMON_PIE = registerItem("lemon_pie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.FRUIT_PIE));
    public static Item APPLE_PIE = registerItem("apple_pie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.FRUIT_PIE));
    public static Item HONEY_PIE = registerItem("honey_pie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.HONEY_PIE, ModConsumableComponents.HONEY_PIE));
    public static Item PICKLE = registerItem("pickle", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.PICKLE));
    public static Item EMPTY_JAR = registerItem("empty_jar", SimplePolymerItem::new);
    public static Item APPLE_CANDY = registerItem("apple_candy", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.APPLE_CANDY));
    public static Item HONEY_CANDY = registerItem("honey_candy", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.HONEY_CANDY, ModConsumableComponents.HONEY_CANDY));
    public static Item JACK_CANDY = registerItem("jack_candy", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.JACK_CANDY, ModConsumableComponents.JACK_CANDY));
    public static Item PUMPKIN_CANDY = registerItem("pumpkin_candy", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.PUMPKIN_CANDY, ModConsumableComponents.PUMPKIN_CANDY));
    public static Item LEMON_CANDY = registerItem("lemon_candy", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.LEMON_CANDY, ModConsumableComponents.LEMON_CANDY));
    public static Item SALT_POPCORN = registerItem("salt_popcorn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SALT_POPCORN));
    public static Item CHOCOLATE_POPCORN = registerItem("chocolate_popcorn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHOCOLATE_POPCORN));
    public static Item CHEESE_POPCORN = registerItem("cheese_popcorn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHEESE_POPCORN));
    public static Item POPCORN = registerItem("popcorn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.POPCORN));
    public static Item CHEESE = registerItem("cheese", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHEESE));
    public static Item TOMATO_SLICES = registerItem("tomato_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.TOMATO_SLICES));
    public static Item CUCUMBER_SLICES = registerItem("cucumber_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CUCUMBER_SLICES));
    public static Item LAVASH = registerItem("lavash", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.LAVASH));
    public static Item SHAWARMA = registerItem("shawarma", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SHAWARMA));
    public static Item BEEF_SALAD = registerItem("beef_salad", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BEEF_SALAD).useRemainder(Items.BOWL));
    public static Item VEGETABLE_SALAD = registerItem("vegetable_salad", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.VEGETABLE_SALAD).useRemainder(Items.BOWL));
    public static Item COOKED_BEEF_SLICES = registerItem("cooked_beef_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_BEEF_SLICES));
    public static Item AVOCADO = registerItem("avocado", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.AVOCADO));

    public static Item NETHER_WHEAT_SEEDS = registerItem("nether_wheat_seeds", settings -> new PolymerBlockItem(ModBlocks.NETHER_WHEAT, settings));
    public static Item NETHER_WHEAT = registerItem("nether_wheat", SimplePolymerItem::new);
    public static Item NETHER_BUN = registerItem("nether_bun", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.NETHER_BUN));
    public static Item FUNGUS_PIZZA_SLICE = registerItem("fungus_pizza_slice", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.FUNGUS_PIZZA_SLICE, ModConsumableComponents.FUNGUS_PIZZA_SLICE));
    public static Item BOILED_CORN = registerItem("boiled_corn", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BOILED_CORN));
    public static Item HOGLIN_MEAT = registerItem("hoglin_meat", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.HOGLIN_MEAT));
    public static Item COOKED_HOGLIN_MEAT = registerItem("cooked_hoglin_meat", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_HOGLIN_MEAT));
    public static Item FUNGUS_STEW = registerItem("fungus_stew", SimplePolymerItem::new, new Item.Settings().maxCount(1).food(ModFoodComponents.FUNGUS_STEW, ModConsumableComponents.FUNGUS_STEW).useRemainder(Items.BOWL));
    public static Item COOKED_CHICKEN_LEG = registerItem("cooked_chicken_leg", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_CHICKEN_LEG));
    public static Item CHICKEN_LEG = registerItem("chicken_leg", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CHICKEN_LEG));
    public static Item COOKED_MUTTON_SLICES = registerItem("cooked_mutton_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_MUTTON_SLICES));
    public static Item MUTTON_SLICES = registerItem("mutton_slices", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.MUTTON_SLICES));
    public static Item COOKED_SQUID_RING = registerItem("cooked_squid_ring", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.COOKED_SQUID_RING));
    public static Item SQUID_RING = registerItem("squid_ring", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.SQUID_RING));
    public static Item PEELED_SQUID_TENTACLES = registerItem("peeled_squid_tentacles", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.PEELED_SQUID_TENTACLES));
    public static Item SQUID_TENTACLES = registerItem("squid_tentacles", SimplePolymerItem::new);

    public static Item CHORUS_FRUIT_IN_CHOCOLATE_ON_A_STICK = registerItem("chorus_fruit_in_chocolate_on_a_stick", ChorusPolyItem::new, new Item.Settings().food(ModFoodComponents.CHORUS_FRUIT_IN_CHOCOLATE_ON_A_STICK));
    public static Item CHORUS_FRUITS_WITH_ENDER_JAM = registerItem("chorus_fruits_with_ender_jam", ChorusPolyItem::new, new Item.Settings().food(ModFoodComponents.CHORUS_FRUITS_WITH_ENDER_JAM));
    public static Item ENDER_JAM = registerItem("ender_jam", SimplePolymerItem::new);
    public static Item ENDER_JAM_STEW_WITH_CHORUS_FRUIT = registerItem("ender_jam_stew_with_chorus_fruit", ChorusPolyItem::new, new Item.Settings().food(ModFoodComponents.ENDER_JAM_STEW_WITH_CHORUS_FRUIT));
    public static Item ENDER_PIE = registerItem("ender_pie", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.ENDER_PIE));
    public static Item GOLDEN_CHORUS_FRUIT = registerItem("golden_chorus_fruit", ChorusPolyItem::new, new Item.Settings().food(ModFoodComponents.GOLDEN_CHORUS_FRUIT, ModConsumableComponents.GOLDEN_CHORUS_FRUIT));
    public static Item BREAD_SLICE_WITH_HONEY = registerItem("bread_slice_with_honey", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.BREAD_SLICE_WITH_HONEY));
    public static Item BUTTER = registerItem("butter", SimplePolymerItem::new);
    public static Item CROISSANT = registerItem("croissant", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.CROISSANT));
    public static Item GOLDEN_BREAD = registerItem("golden_bread", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.GOLDEN_BREAD, ModConsumableComponents.GOLDEN_BREAD));
    public static Item GRAPE = registerItem("grape", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.GRAPE));
    public static Item HOGLIN_SANDWICH = registerItem("hoglin_sandwich", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.HOGLIN_SANDWICH));
    public static Item NETHER_BUN_SLICE = registerItem("nether_bun_slice", SimplePolymerItem::new, new Item.Settings().food(ModFoodComponents.NETHER_BUN_SLICE));

    private static Item registerItem(String name, Function<Item.Settings, Item> factory) {
        return registerItem(name, factory, new Item.Settings());
    }

    private static Item registerItem(String name, Function<Item.Settings, Item> factory, Item.Settings settings) {
        var key = RegistryKey.of(RegistryKeys.ITEM, Identifier.of(BorukvaFood.MOD_ID, name));
        Item item = factory.apply(settings.registryKey(key));

        return Registry.register(Registries.ITEM, key, item);
    }

    public static void registerModItems() {
        ItemGroup.Builder builder = PolymerItemGroupUtils.builder();
        builder.icon(() -> new ItemStack(ModItems.TOMATO, 1));
        builder.displayName(Text.translatable("item-group.borukva-food.items"));

        builder.entries((displayContext, entries) -> {
            if (!FabricLoader.getInstance().isModLoaded("farmersdelight")) {
                entries.add(TOMATO);
                entries.add(ONION);
                entries.add(CABBAGE);
                entries.add(TOMATO_SEEDS);
                entries.add(CABBAGE_SEEDS);
                entries.add(RICE);
                entries.add(RICE_PANICLE);
                entries.add(RICE_BOWL);
                entries.add(TOMATO_SLICES);
                entries.add(ONION_SEEDS);
                entries.add(TOMATO_SANDWICH);
                entries.add(SWEET_BERRY_COOKIE);
                entries.add(SQUID_TENTACLES);
                entries.add(PEELED_SQUID_TENTACLES);
                entries.add(SQUID_RING);
                entries.add(COOKED_SQUID_RING);
                entries.add(SALMON_FILLET);
                entries.add(SALMON_MAKI);
                entries.add(SALMON_NIGIRI);
            }
            entries.add(CHILLI_PEPPER);
            entries.add(CORN);
            entries.add(CUCUMBER);
            entries.add(LETTUCE);
            entries.add(NETHER_WHEAT);
            entries.add(ENDER_INFECTED_ONION);
            entries.add(CHILLI_PEPPER_SEEDS);
            entries.add(CORN_SEEDS);
            entries.add(CUCUMBER_SEEDS);
            entries.add(LETTUCE_SEEDS);
            entries.add(NETHER_WHEAT_SEEDS);
            entries.add(ENDER_INFECTED_ONION_SEEDS);
            entries.add(LEMON);
            entries.add(AVOCADO);
            entries.add(HOT_SPICE);
            entries.add(SALT);
            entries.add(OIL);
            entries.add(MAYONNAISE);
            entries.add(KETCHUP);
            entries.add(GUACAMOLE);
            entries.add(EMPTY_JAR);
            entries.add(PICKLE_JAR);
            entries.add(PICKLE);
            entries.add(ModBlocks.MEAT_PIZZA_ITEM);
            entries.add(ModBlocks.VEGAN_PIZZA_ITEM);
            entries.add(ModBlocks.FUNGUS_PIZZA_ITEM);
            entries.add(MEAT_PIZZA_SLICE);
            entries.add(VEGAN_PIZZA_SLICE);
            entries.add(FUNGUS_PIZZA_SLICE);
            entries.add(CHOCOLATE_ICE_CREAM);
            entries.add(ICE_CREAM);
            entries.add(WAFFLE);
            entries.add(CHOCOLATE_BAR);
            entries.add(BLACKCURRANT_COOKIE);
            entries.add(BEEF_SANDWICH);
            entries.add(BREAD_SLICE);
            entries.add(NETHER_BUN);
            entries.add(BORSCH);
            entries.add(BROTH);
            entries.add(ROTTEN_SOUP);
            entries.add(FUNGUS_STEW);
            entries.add(BLACKCURRANTS);
            entries.add(GOOSEBERRY);
            entries.add(BEEF_SLICES);
            entries.add(COOKED_BEEF_SLICES);
            entries.add(BEEF_BARBECUE);
            entries.add(COOKED_BEEF_BARBECUE);
            entries.add(VEGAN_BARBECUE);
            entries.add(COOKED_VEGAN_BARBECUE);
            entries.add(LEMON_PIE);
            entries.add(APPLE_PIE);
            entries.add(HONEY_PIE);
            entries.add(APPLE_CANDY);
            entries.add(HONEY_CANDY);
            entries.add(JACK_CANDY);
            entries.add(PUMPKIN_CANDY);
            entries.add(LEMON_CANDY);
            entries.add(CUCUMBER_SLICES);
            entries.add(CHEESE);
            entries.add(LAVASH);
            entries.add(SHAWARMA);
            entries.add(VEGETABLE_SALAD);
            entries.add(BEEF_SALAD);
            entries.add(POPCORN);
            entries.add(SALT_POPCORN);
            entries.add(CHOCOLATE_POPCORN);
            entries.add(CHEESE_POPCORN);
            entries.add(ModBlocks.CHOCOLATE_CAKE_ITEM);
            entries.add(ModBlocks.HONEY_CAKE_ITEM);
            entries.add(SALMON_URAMAKI);
            entries.add(ONIGIRI);
            entries.add(NORI);
            entries.add(SAUERKRAUT);
            entries.add(SALO);
            entries.add(SUNFLOWER_SEED);
            entries.add(ROASTED_SUNFLOWER_SEED);
            entries.add(BOILED_CORN);
            entries.add(HOGLIN_MEAT);
            entries.add(COOKED_HOGLIN_MEAT);
            entries.add(CHICKEN_LEG);
            entries.add(COOKED_CHICKEN_LEG);
            entries.add(MUTTON_SLICES);
            entries.add(COOKED_MUTTON_SLICES);
            entries.add(CHORUS_FRUIT_IN_CHOCOLATE_ON_A_STICK);
            entries.add(CHORUS_FRUITS_WITH_ENDER_JAM);
            entries.add(ENDER_JAM);
            entries.add(ENDER_JAM_STEW_WITH_CHORUS_FRUIT);
            entries.add(ENDER_PIE);
            entries.add(GOLDEN_CHORUS_FRUIT);
            entries.add(BREAD_SLICE_WITH_HONEY);
            entries.add(BUTTER);
            entries.add(CROISSANT);
            entries.add(GOLDEN_BREAD);
            entries.add(GRAPE);
            entries.add(HOGLIN_SANDWICH);
            entries.add(NETHER_BUN_SLICE);
        });
        ItemGroup polymerGroup = builder.build();
        PolymerItemGroupUtils.registerPolymerItemGroup(Identifier.of(BorukvaFood.MOD_ID, "items"), polymerGroup);
        HarvestSickleItem.registerAttackAction();
        BorukvaFood.LOGGER.info("Register Mod Items");
    }
}
